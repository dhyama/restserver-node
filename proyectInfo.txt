/************************************
*    Documentación del proyecto     *
*************************************

- Inicialización del proyecto para la creación del fichero package.json
npm init

- Instalamos el paquete Express para la generación de servicios (Documentación -> https://www.npmjs.com/package/express)
npm install express --save

- Creamos un carpeta especial para el los ficheros del servidor separado del resto de aplicación (Es una buena practica para aplicaciones grandes)
server/server.js

- Creamos los metodos http que se necesitan para la gestión del servicios
    * GET para la obtención de datos
    * POST para la creación de nuevos datos
    * PUT/PATCH para la actualización de datos
    * DELETE para marcar como borrado un registro (En BD ya no se borran los datos, se marcan como no disponibles)

- Instalamos el paquete body-parser para poder precesar los datos de las cabeceras de nuestro servicios
npm install body-parser --save

- Instalamos el paquete para la conexión con las BD de MongoDB
npm i mongoose --save

- Instalamos el paquete para colores en consola
npm install colors --save

- Creamos una carpeta donde tendremos definidos todos los controladores o rutas de acceso a nuestro servicio resto
routes/usuario.js

- Creamos una carpeta donde tendremos definidos todos los modelos de datos de nuestra base de datos de MongoDB
models/usuario.js

- Instalamos el paquete para validación de datos para la BD MondoDB (Documentación -> https://www.npmjs.com/package/mongoose-unique-validator)
npm i mongoose-unique-validator --save

- Instalamos el paquete para encriptación de contraseñas (Hash de una sola via)
npm i bcrypt --save

- Instalamos la libreria uderscore que amplia enormemente las funcionalidades de javascript (Documentación -> https://underscorejs.org/)
npm install underscore --save